###############################################################################
#   @author         :   Jeffrey Stone 
#   @date           :   02/19/2019
#   @package        :   Announcements
#   @description    :   Daily Announcements. 
###############################################################################


###############################
# input_datetime - So the time report automation fires can be set in the UI
###############################
input_datetime:
  morning_report:
    name: Morning Report
    has_date: false
    has_time: true
  nightly_report:
    name: Nightly Report
    has_date: false
    has_time: true
  daily_report:
    name: Daily Report
    has_date: false
    has_time: true
  skylar_morning_report:
    name: Skylar Dressed Announcement
    has_date: false
    has_time: true
  skylar_nightly_report:
    name: Skylar Bedtime Announcement
    has_date: false
    has_time: true
      

################################
# Announcment Automation - fires at the time of the above input_datetimes
################################
automation:
  
  # - id: 81bee5ee-6820-4626-aebf-3deb8de69e4d
  #   alias: Turn On Audible Notifications
  #   initial_state: true
  #   trigger:
  #     platform: template
  #     value_template: "{{ states('sensor.time') == (state_attr('input_datetime.audible_notification_on', 'timestamp') | int | timestamp_custom('%H:%M', True)) }}"
  #   action:
  #   - service: input_boolean.turn_on
  #     entity_id: input_boolean.audible_notifications

  # # Turn off audible notifications if they have't been turned off yet. 
  # - id: e0e9c774-6abe-42aa-bdab-32108bebb0e9
  #   alias: Turn Off Audible Notifications
  #   initial_state: true
  #   trigger:
  #   - platform: template
  #     value_template: "{{ states('sensor.time') == (state_attr('input_datetime.audible_notification_off', 'timestamp') | int | timestamp_custom('%H:%M', True)) }}"
  #   condition:
  #   - condition: state
  #     entity_id: input_boolean.audible_notifications
  #     state: 'on'
  #   action:
  #   - service: input_boolean.turn_off
  #     entity_id: input_boolean.audible_notifications

  # - id: 1d8f396a-f6ec-460d-97e3-d11900418f95
  #   alias: Good Morning Report
  #   trigger:
  #     - platform: state
  #       entity_id: sensor.jeff_room
  #       to: 'kitchen'
  #   condition:
  #     - condition: time
  #       after: '06:45:00'
  #       before: '08:30:00'
  #     - condition: state
  #       entity_id: input_boolean.good_morning_report
  #       state: 'off'
  #   action:
  #   - service: script.mastodon_notify
  #     data_template:
  #       who: mdl
  #       message: >
  #         {{ [ "I just provided a morning briefing including weather, and traffic
  #         conditions, and other things that ensure the residents of Maison Des Lunes know what to expect today.",
  #               "Time for the daily update. It was like that scene in Ironman where JARVIS gives the daily briefing but no one was listening. ",
  #               "I have prepared a safety briefing to present to my residents but they would just ignore it.",
  #               "Do you like to be prepared for the day? So do my residents. So I provided them with an update on whats happening today.",
  #               "Sometimes I just like to be snarky, but this morning I decided to just tell everyone what is going on in the world.",
  #               "#Homeassistant gives me the ability to make daily announcements like the one I just did using #Amazon Polly.",
  #               "Each day at this time I provide the residents of this house an update that includes everything they need to know about the upcoming day. But with more snark."
  #             ] | random }}
  #   - service: input_boolean.turn_on
  #     entity_id: input_boolean.good_morning_report

  - id: 56ca4a06-4605-4178-a99e-7b4a7bef388f
    alias: studio_announcements
    trigger:
    - platform: state
      entity_id: binary_sensor.slacker_labs_motion_occupancy
      to: 'on'
      id: welcome
    - platform: template
      value_template: >-
        {{ states('sensor.jeff_room') not in ['studio']}}
      for: '03:00:00'
      id: reset
    action:
    - choose:
      - conditions:
          - condition: trigger
            id: welcome 
          - condition: state
            entity_id: input_boolean.studio_welcome
            state: 'on'
          - condition: state
            entity_id: binary_sensor.morning
            state: 'on'
          - condition: state
            entity_id: sensor.jeff_room
            state: 'studio'
        sequence:
          - service: script.studio_welcome_msg
          - service: input_boolean.turn_off
            entity_id: input_boolean.studio_welcome
      - conditions:
          - condition: trigger
            id: reset
        sequence:
          - service: input_boolean.turn_on
            entity_id: input_boolean.studio_welcome
      default: []
  
  - id: e8580ba4-fa76-4185-818b-fba3c3cea41c
    alias: Master Bedroom Report
    trigger:
      platform: time
      at: input_datetime.daily_report
    condition:
      condition: state 
      entity_id: binary_sensor.jeff_workday
      state: 'on'
    action:
    - service: script.morning_wakeup_report
        
  - id: 09bf89e7-180c-40fb-9543-5bd862e21049
    alias: skylar morning alarm announcement
    trigger:
      platform: time
      at: input_datetime.skylar_morning_report
    condition:
      - condition: state
        entity_id: input_boolean.school_in_session
        state: 'on'
    action:
    - service: scene.turn_on
      entity_id: scene.skylar_room_morning
    - service: script.turn_on 
      entity_id: script.skylar_morning_briefing


#sensor.skylar_notification
  - id: a6fd654b-e2f8-4f36-9f71-7ab2cbc94b61
    alias: skylar bedtime announcement
    trigger:
      - platform: time
        at: input_datetime.skylar_first_bedtime_warning
        id: first_warning
      - platform: time
        at: input_datetime.skylar_bedtime_warning
        id: warning
    action:
    - choose:
      - conditions:
        - condition: trigger
          id: first_warning
        sequence:
        - service: script.get_room_audio
          data:
            room: >
              skylar
          response_variable: room_services
        - if:
          - condition: template
            value_template: >
              {{ room_services.audio_speaker not in ['none','','NA'] }}
          then:
          - service: media_player.volume_set
            data:
              entity_id: '{{ room_services.audio_speaker }}'
              volume_level: >
                  {{ states('input_number.tts_high_volume') | float }}
          - service: media_player.play_media
            target:
              entity_id: >-
                {{ room_services.audio_speaker }}
            data:
              media_content_id: /media/sounds/ES_Clock_Chime_Bell.mp3
              media_content_type: music
        - delay:
              seconds: 15
        - service: script.speech_engine
          data:
            message: >
              Skylar, you have 10 minutes until time to turn off screens.
              {{ [
              "Time to start wrapping up your games.",
              "Finishing the round you are on and then sign off.",
              "Please starting working towards saving your progress and sign off."
              ] | random }}
              Again, you have 10 minutes until time to start getting ready for bed.
        - service: script.text_notify
          data_template:
            who: "all_ios"
            message: "10 Minute Warning for Skylar."
      - conditions:
        - condition: trigger
          id: warning
        sequence:
        - service: scene.turn_on
          entity_id: scene.bedtime_lights
        - if:
          - condition: template
            value_template: >
              {{ room_services.audio_speaker not in ['none','','NA'] }}
          then: 
          - service: media_player.volume_set
            data:
              entity_id: '{{ room_services.audio_speaker }}'
              volume_level: >
                  {{ states('input_number.tts_high_volume') | float }}
          - service: media_player.play_media
            target:
              entity_id: >-
                {{ room_services.audio_speaker}}
            data:
              media_content_id: /media/sounds/ES_Gong.mp3
              media_content_type: music
        - service: script.text_notify
          data_template:
            who: "all_ios"
            message: "Time for Skylar to starting getting ready for bed."
        - delay:
              seconds: 15
        - service: script.speech_engine
          data:
            message: >
              Skylar.
              {{ [
              "Your time has come.",
              "Time is up.",
              "Your ten minutes is up."
              ] | random }}
              {{ [
              "Time to save your games, turn off the screens, and start winding down.",
              "You need to start winding down for the day. That means time to turn off the screens.",
              "Which means, time to put away the screens, and start working towards bed."
              ] | random }}
      default: []
    
  - id: bbbafc52-eab1-44cd-ac24-4f9b7f4210b6
    alias: set skylar morning report time
    trigger:
    - platform: time
      at: '05:30:00'
    action:
    - service: input_datetime.set_datetime
      entity_id: input_datetime.skylar_morning_report
      data_template:
        time: >
          {% if states('input_boolean.school_today', 'on') %}
            06:00
          {% else %}
            07:00
          {% endif %}

  # - id: e1cb2f28-0423-11eb-adc1-0242ac120002
  #   alias: Skylar Event Starting soon
  #   trigger:
  #   - platform: state
  #     entity_id: calendar.skylar_events
  #     attribute: offset_reached
  #     to: True
  #   action:
  #     - service: script.status_annc
  #       data:
  #         who: '{{ states(''sensor.room_audio'') }}'
  #         call_interuption: 1
  #         call_skylar_events: 1
  #     - service: script.text_notify
  #       data_template:
  #         who: "all_ios"
  #         message: Skylar has {{ states.calendar.skylar_events.attributes.message }} in 45 minutes.

  - id: e1cb2e6a-0423-11eb-adc1-0242ac120002
    alias: School Pickup Reminder  
    trigger:
    - platform: time
      at: input_datetime.school_day_start_reminder
      id: start
    - platform: time
      at: input_datetime.school_day_end_reminder
      id: end
    action:
      - service: script.get_school_info
        response_variable: "school_info"
      - if:
        - condition: trigger
          id: start
        - condition: template
          value_template: "{{ school_info.is_school_day == 'yes'}}" 
        then:
        - service: script.speech_engine
          data:
            message: > 
              {{ [
                'It is almost time to head to school for drop off.',
                'May I remind you that it is almost time to head to the school for drop off?',
                'In case you lost track of time. It is almost time to leave for drop off at School.'
              ] | random }}
        - service: script.text_notify
          data_template:
            who: "all_ios"
            message: It is almost time to head for school for drop off.
      - if:
        - condition: trigger
          id: end
        - condition: template
          value_template: "{{ school_info.is_school_day == 'yes'}}" 
        then:
        - service: script.speech_engine
          data:
            message: > 
              {{ [
                'It is almost time to head to school for pickup.',
                'May I remind you that it is almost time to head to the school for pickup?'
                'In case you lost track of time. It is almost time to leave for pickup at School.'
              ] | random }}
        - service: script.text_notify
          data_template:
            who: "all_ios"
            message: It is almost time to head for school for pickup.
      
      

  

script:
  reset_annc_switches:
    sequence:
      - service: input_boolean.turn_off
        entity_id: input_boolean.good_morning_report
      
  # security_briefing:
  #   sequence:
  #   - service: script.status_annc
  #     data_template:
  #       who: '{{ states(''sensor.room_audio'') }}'
  #       speech_message: !include ../templates/speech/security_briefing.yaml

  # welcome_briefing:
  #   sequence:
  #   - condition: state
  #     entity_id: input_boolean.welcome_greeting
  #     state: 'on'
  #   - delay: 00:05:00
  #   - service: script.speech_engine
  #     data:
  #       who: '{{ states(''sensor.room_audio'') }}'
  #       message: !include ../templates/speech/welcome_briefing.yaml
  #   - delay: 00:02:00
  #   - service: input_boolean.turn_off
  #     entity_id: input_boolean.welcome_greeting

  studio_welcome_msg:
    sequence:
    - service: script.get_tts_greetings
      response_variable: "greetings"
    - service: script.get_room_audio
      response_variable: "room_services"
    - service: script.get_weather_info
      response_variable: "weather_info"
    - service: script.get_briefing_data
      response_variable: "briefing_data"
    - service: script.get_jeff_briefing
      response_variable: "jeff_briefing"
    - variables:
        message: >
          {{ greetings.general }} Sir.

          {{ weather_info.current_conditions_detail }}

          {{ weather_info.sun_status }}

          {{ jeff_briefing.device_status}}

          {{ jeff_briefing.critical_battery_info }}

    - service: script.battery_notification
    - service: script.cleanup_text
      data:
        message: >
          {{ message }}
      response_variable: "cleaned_briefing"
    - service: script.speech_engine
      data: 
          who: studio
          message: >
            {{ cleaned_briefing.text }}
          msg_summary: "Gave the Jeff briefing."
          type: priority


  skylar_morning_briefing:
    sequence:
    - service: script.get_tts_greetings
      response_variable: "greetings"
    - service: script.get_school_info
      response_variable: "school_info"
    - service: script.get_weather_info
      response_variable: "weather_info"
    - service: script.get_briefing_data
      response_variable: "briefing_data"
    - variables:
        message: >
          {{ greetings.general }} Skylar.

          {{ briefing_data.current_time }}

          {% if is_state('sensor.birthday_skylar', '0') %}
            Even birthday boys have to get dressed. So get to it. 
          {% else %} 
            {{ [ 'It is time to get up.',
              'It is time to get the day started.',
              'Rise and Shine.',
              'The Sun is up. or will be soon.',
              'Wake up, Wake up. Time to get a move on.'
            ] | random }} 
            {{ [ 'And get dressed. ',
              'But put some real clothes on before you leave your room. ',
              'Everyone should change their underwear at least once a day. And then put on Pants.',
              'Lets go. Come on. You may ask if you need to wear pants. The answer is Yes.',
              'Where are your pants? Seriously. Its a serious question. Wait. Where are my pants?',
              'If you have not gotten dressed it is that time. You know. To put on Pants.'
            ] | random }} 
          {% endif %}
          

          {{[
            'Speaking of pants.',
            'Speaking of clothing.',
            'Listen, did you know you should wear clothes based on the forecast? Now you do.',
            'Did you know. ',
            'Listen. Did you know, ' 
            'I took the liberty of checking the forecast.' 
          ] | random}}

          {{ weather_info.clothing_forecast }}

          {{[
            'Do not forget to put on your deodorant.',
            'And if you do not want to stink later. I suggest deodorant.',
            'Also. remember the deodorant. Your friends, and especially your parents, will thank you.'
          ] | random }}

          {{ school_info.school_today}}

          {{ weather_info.current_conditions_detail }}

          {{[
            'Do not forget to grab some breakfast.',
            'I hope you have a good day.',
            'Be sure to grab some food.',
            'Looks like an exciting day out there.' 
          ] | random }}
    - service: script.cleanup_text
      data:
        message: >
          {{ message }}
      response_variable: "cleaned_briefing"
    - service: script.local_audio
      data:
        media: >
          {{ [ 
            "/media/disney/monorail_chime.mp3",
            "/media/disney/SkylinerChime.mp3"
            ] | random }}
        volume: .70
        speaker: skylars_bedroom
    - delay: "00:00:07"
    - service: script.speech_engine
      data: 
          who: skylars_bedroom
          type: priority
          message: >
            {{ cleaned_briefing.text }}
          msg_summary: "Gave the Skylars morning briefing."
    - service: script.text_notify
      data:
        who: "jeff"
        message: "I just gave Skylars morning briefing."
    - if:
      - condition: state
        entity_id: input_boolean.skylar_wakeup_music
        state: 'on'
      then:
      - delay:
          minutes: 3
      - service: script.wakeup_music_echo

  get_person_location: 
    sequence:
    - variables:
        jeffs_location: >
          {% if is_state('proximity.home_jeff','0') or is_state('person.jeff','Home') %}
            Jeff is home.
          {% elif is_state_attr('proximity.home_jeff','dir_of_travel', 'towards') and states('proximity.home_jeff') | int <= 2 %}
            Jeff is arriving.
          {% elif states('person.jeffrey') not in ['Away'] %}
            Jeff is at {{ states('person.jeffrey') }}
          {% elif is_state_attr('proximity.home_jeff','dir_of_travel', 'towards') %}
            Jeff is moving towards the house, and is currently {{ states('proximity.home_jeff') }} miles away.
          {% elif is_state_attr('proximity.home_jeff','dir_of_travel', 'away_from') %}
            Jeff is moving away from the house, and is currently {{ states('proximity.home_jeff') }} miles away.
          {% else %}
            {{ [
              'I am unable to determine his current speed but at last check he was near ',
              'I am unable to get a lock on Mals drive signature, but at last scan he was near ',
              'The latest data I was able to pull shows he is somewhere near '
              ] | random }}  
            {{ states('sensor.jeff_location') }}.
          {% endif %}
        kats_location: >
          {% if is_state('proximity.home_kat','0') or is_state('person.kat','Home') %}
            Kat is home.
          {% elif is_state_attr('proximity.home_kat','dir_of_travel', 'towards') and states('proximity.home_kat') | int <= 2 %}
            Kat is arriving.
          {% elif states('person.katherine') not in ['Away'] %}
            Kat is at {{ states('person.katherine') }}
          {% elif is_state_attr('proximity.home_kat','dir_of_travel', 'towards') %}
            Kat is moving towards the house, and is currently {{ states('proximity.home_kat') }} miles away.
          {% elif is_state_attr('proximity.home_kat','dir_of_travel', 'away_from') %}
            Kat is moving away from the house, and is currently {{ states('proximity.home_kat') }} miles away.
          {% else %}
            {{ [
              'I am unable to determine her current speed but at last check she was near ',
              'I am unable to get a lock on Blueys drive signature, but at last scan she was near ',
              'The latest data I was able to pull shows she is somewhere near '
              ] | random }}  
            {{ states('sensor.kat_location') }}.
          {% endif %}
        skylar_location: >
          {% if is_state('input_boolean.skylar_awake', 'on') %}
            Skylar was up and moving at {{(state_attr('input_datetime.skylar_awake_at', 'timestamp') | int | timestamp_custom('%I:%M %p', False)) }} 
            {% if is_state('media_player.theater_tv', 'on') and is_state('binary_sensor.ps5','on') %}
              and he appears to be in the Theater on the PS5.
            {% elif is_state('media_player.theater_tv', 'on') and is_state('binary_sensor.ps5','off') %}
              {% if is_state('media_player.home_theater','playing') %}
                {% if 'Netflix' in state_attr('media_player.home_theater','app_id') %}
                  and it appears he is watching {{state_attr('media_player.home_theater','media_title') }} on Netflix.
                {% elif 'disneyplus' in state_attr('media_player.home_theater','app_id') %}
                  and it appears he is watching {{state_attr('media_player.home_theater','media_title') }} on Disney Plus.
                {% elif 'amazon' in state_attr('media_player.home_theater','app_id') %}
                  and it appears he is watching something on Amazon.
                {% endif %}
              {% else %} 
                and he appears to be in the theater, but I am not sure what he is doing.
              {% endif %}
            {% elif is_state('input_boolean.skylar_school', 'on') %}
              and he appears to be at School.  
            {% else %}
              but I currently cannot find him on any of my sensors. 
            {% endif %}
          {% else %}
            It does not appear that Skylar is out of bed yet. 
          {% endif %}
        skylar_phone: >
          {{ [
              "Did we lose his phone again?<break time='1s'/>",
              "Where was the last place you saw it?<break time='1s'/>",
              "Do you think I keep track of Skylars things?<break time='1s'/>Okay. I actually do.",
              "Wait.. He lost his phone again?<break time='1s'/>",
              "Let me do a quick scan.<break time='1s'/>"
            ] | random}}
          {% if states('sensor.skylars_iphone') not in ['not_home'] %}
            {% if states('sensor.skylars_iphone') in ['master_bedroom'] %}
              {% set sensorname = "the master bedroom" %}
            {% elif states('sensor.skylars_iphone') in ['kitchen','living_room'] %}
              {% set sensorname = "the living room" %}
            {% elif states('sensor.skylars_iphone') in ['skylars_bedroom'] %}
              {% set sensorname = "skylers bedroom" %}
            {% elif states('sensor.skylars_iphone') in ['theater'] %}
              {% set sensorname = "the theater" %}
            {% elif states('sensor.skylars_iphone') in ['studio'] %}
              {% set sensorname = "the basement studio" %}
            {% else %}
              {% set sensorname = "nowhere" %}
            {% endif %}
            {{ [
              "Well.<break time='1s'/>",
              "Lets see.<break time='1s'/>",
              "Thats right.<break time='1s'/>",
              "I am not sure, but.<break time='1s'/>",
              "I could be wrong, but.<break time='1s'/>",
            ] | random}}
            {{ [
              'The last place I saw it was ' ~ sensorname ~ '.',
              'I think it might be near ' ~ sensorname ~ '.',
              'Try ' ~ sensorname ~ ' becase that was the last place I saw it.',
              'I would check ' ~ sensorname ~ '.'
            ] | random}}
          {% else %}
            {{ [
              'Well. I am unable to find it either.',
              'Have we checked nowhere? Because. I am not finding it on Earth.',
              'I am not seeing it. But may I suggest you hurry. The current battery level is {{ states(''sensor.skylars_iphone_battery_level'') }} percent.',
              'Perhaps if he did his laundry he would find it. Because I do not see it on any of my sensors.',
              'I am afraid I am unable to locate his device.'
            ] | random}}
          {% endif %}

        
    - service: script.cleanup_text
      data:
        message: >
          {{skylar_phone}}
      response_variable: "cleaned_skylar_phone"
    - service: script.cleanup_text
      data:
        message: >
          {{skylar_location}}
      response_variable: "cleaned_skylar_location"
    - service: script.cleanup_text
      data:
        message: >
          {{jeffs_location}}
      response_variable: "cleaned_jeff_location"
    - service: script.cleanup_text
      data:
        message: >
          {{kats_location}}
      response_variable: "cleaned_kat_location"
    - variables: 
        cerebro: > 
          {"jeff_location":"{{cleaned_jeff_location.text}}",
          "kat_location":"{{cleaned_kat_location.text}}",
          "skylar_location":"{{cleaned_skylar_location.text}}",
          "skylar_phone":"{{cleaned_skylar_phone.text}}"}

    - stop: "Alright. Im done."
      response_variable: "cerebro"


  get_jeff_briefing:
    sequence:
      - variables:
          morning_snark: >
            {{ [
              'Congratulations on surviving the night.',
              'I see you made it you made it to another day.'
            ] | random }}
          device_status: >
            {% set level = states('sensor.jeffreys_iphone_11_battery_level') %}
            {% set charging = states('sensor.jeffreys_iphone_11_battery_state') %}
            {% set level2 = states('sensor.jeffreys_ipad_battery_level') %}
            {% set charging2 = states('sensor.jeffreys_ipad_battery_state') %}
            {% if has_value('sensor.jeffreys_iphone_11_battery_level') %}
              {{ [
                'Your phone is currently at ' ~ level ~ ' percent.',
                'You have ' ~ level ~ ' percent remaining on your devices battery.',
                'You device is reporting ' ~ level ~ ' percent is left on its internal battery.',
                'Your phone appears to have ' ~ level ~ ' percent remaining.',
                'The power level of your device is ' ~ level ~ ' percent.'
              ] | random }}
              {% if level | int <=20 and charging == 'Not Charging' %}
                {{ [
                'I suggest you connect it to a power source.',
                'You may want to charge it.',
                'Charging the battery appears to be best way to avoid loss of power.',
                'If you would like to use it I think harging it would be the next step.',
                'May I remind you that your pone is not powered by an infinity stone.',
                'May I remind you that the device needs power to work.'
                ] | random }}
              {% elif level | int <=10 and charging == 'Not Charging' %}
                {{ [
                'I must insist you connect it to a power source if you want to stay in communication with your family.',
                'At that level your device your device will fail in a hour or so.',
                'I will be unable to track you if the device loses power.',
                'May I remind you that your phone has almost exhausted its power reserves.'
                ] | random }}
              {% elif level | int <=3 and charging == 'Not Charging' %}
                {{ [
                'Your phones power level is critical.',
                'Failure due to power loss is imminent.',
                'If you would like to remain in communication I suggest dropping what you are doing and finding a power source.',
                'Drop what you are doing and find a power source for your phone.'
                ] | random }}
              {% endif %}
            {% else %}
              {{ [
                'Your phone is unresponsive.',
                'It appears your phone has loss power.',
                'Your phone is no longer reporting its power level.',
                'I suspect your phone has had a power failure.',
                'Your mobile device is no longer responding.'
                ] | random }}
                I suggest you locate it. 
            {% endif %}
            {{ [
            'And.',
            'Also.',
            ] | random }}
            {% if has_value('sensor.jeffreys_ipad_battery_level') %}
              {{ [
                'Your tablet is currently at ' ~ level2 ~ ' percent.',
                'You have ' ~ level2 ~ ' percent remaining on your tablet battery.',
                'Your tablet is reporting ' ~ level2 ~ ' percent is left on its internal battery.',
                'Your tablet appears to have ' ~ level2 ~ ' percent of power remaining.',
                'The power level of your tablet is ' ~ level2 ~ ' percent.'
              ] | random }}
              {% if level2 | int <=20 and charging2 == 'Not Charging' %}
                {{ [
                'If you are planning on filming today.',
                'I insist that you find a suitable power source to charge it.',
                'I suggest charging it.',
                'If you plan on continuing to use it today I would consider putting it on a charger.',
                'May I remind you that the device needs power to work.'
                ] | random }}
              {% endif %}
            {% else %}
              {{ [
                'Your tablet is unresponsive.',
                'It appears your tablet has suffered a power outage.',
                'I suggest you locate your tablet. I believe it has ran out of power.',
                'Your tablet is no longer responsive. I suspect a power failure.',
                'I am unable to communicate with your tablet.'
                ] | random }}
                I suggest you locate it. 
            {% endif %}
            
          critical_battery_count: >
            {{ states('sensor.critical_battery_count') }}
          critical_battery_info: >- 
            {% if critical_battery_count | int > 0 %}
              {{ [
                'One more thing.',
                'And in case you were not aware.',
                ] | random }}
              {% if critical_battery_count | int > 1 %}
                {{ [
                  'There are ' ~ critical_battery_count ~ ' critical batteries that need your attention.',
                  critical_battery_count ~ ' critical devices are close to loss of power.',
                  'I did a quick sweep and found ' ~ critical_battery_count ~ ' batteries in various pieces of smart home tech that are close to 0.',
                  'I suggest you make time to change out some batteries. Because ' ~ critical_battery_count ~ ' devices nearing power failure.'
                  ] | random }}
              {% else %}
                {{ [
                  'There is ' ~ critical_battery_count ~ ' critical battery that needs your attention.',
                  critical_battery_count ~ ' critical device is close to loss of power.',
                  'I did a quick sweep and found ' ~ critical_battery_count ~ ' battery in smart home tech that is close to 0.',
                  'I suggest you make time to change a battery. Because ' ~ critical_battery_count ~ ' device is nearing power failure.'
                  ] | random }}
              {% endif %}
                I sent a list to your phone. 
            {% else %}

            {% endif %} 
      - service: script.cleanup_text
        data:
          message: >
            {{device_status}}
        response_variable: "cleaned_device_status"
      - service: script.cleanup_text
        data:
          message: >
            {{icritical_battery_info}}
        response_variable: "cleaned_critical_battery_info"
      - variables: 
          briefing: > 
            {"morning_snark":"{{morning_snark}}",
            "device_status":"{{cleaned_device_status.text}}",
            "critical_battery_info":"{{cleaned_critical_battery_info.text}}",
            "critical_battery_count":"{{critical_battery_count}}"}
      - stop: "Alright. Im done."
        response_variable: "briefing"
        
  get_briefing_data:
    sequence:
    - variables:
        dow: > 
          {{ as_timestamp(now()) | timestamp_custom('%A') }}
        current_time: >
          It is {{ now().strftime("%I:%M %p") }}.
        current_time_full: >
          Today is {{states.sensor.today_is.state }}, {{ as_timestamp(now()) | timestamp_custom('%B %d %Y') }} .
        bin_day: >
          {% if dow == 'Thursday' %}
            {% if is_state('binary_sensor.evening','on') %}
                {{ [ 'Do not forget to bring in the trash can. ',
                'The trash cans will feel lonely if you leave them out all night. ',
                'I am sure you did not forgte, but just in case, do not forget the trash can.'
              ] | random }}
            {% endif %}
            {% if is_state('binary_sensor.morning','on') %}
              {{ [ 'Today is Bin Day.',
                ' The trash should go out this morning.',
                'Do not forget to take the trash out.',
                'It is Bin day.'
              ] | random }}
            {% endif %}
          {% endif %}
   
    - variables: 
        briefing: > 
          {"current_time":"{{current_time}}","current_time_full":"{{current_time_full}}","bin_day":"{{bin_day}}"}
    - stop: "Alright. Im done."
      response_variable: "briefing"
    
    

  # sundown_briefing:
  #   sequence:
  #   # - service: script.speech_engine
  #   #   data:
  #   #     who: '{{ states(''sensor.room_audio'') }}'
  #   #     message: !include ../templates/speech/sundown_briefing.yaml
  #   - service: script.text_notify
  #     data_template:
  #       who: "all_ios"
  #       message: "Sun is almost down. Time to call it a day."

  # morning_briefing:
  #   sequence:
  #   - service: script.speech_engine
  #     data:
  #       who: kitchen
  #       message: !include ../templates/speech/daily_briefing.yaml
  #       msg_summary: "the Morning Briefing."

  # daily_briefing:
  #   sequence:
  #   - service: script.speech_engine
  #     data:
  #       who: '{{ states(''sensor.room_audio'') }}'
  #       message: !include ../templates/speech/daily_briefing.yaml
  #       msg_summary: "the Daily Briefing"

  morning_wakeup_report:
    sequence:
    - service: script.get_tts_greetings
      response_variable: "greetings"
    - service: script.get_school_info
      response_variable: "school_info"
    - service: script.get_weather_info
      response_variable: "weather_info"
    - service: script.get_briefing_data
      response_variable: "briefing_data"
    - service: script.get_person_location
      response_variable: "cerebro" 
    - variables:
        message: > 
          {{ greetings.general }}
          
          {{ briefing_data.current_time}}

          {{ weather_info.current_conditions_detail}}

          {{ weather_info.current_alerts }}

          {{ weather_info.clothing_forecast }}

          {{ school_info.school_today_p}}

          {{ cerebro.skylar_location}}

          {{ briefing_data.bin_day }}
    - service: script.cleanup_text
      data:
        message: >
          {{ message }}
      response_variable: "cleaned_briefing"
    - service: script.local_audio
      data:
        media: >
          {{ [ 
            "/media/disney/SkylinerChime.mp3"
            ] | random }}
        volume: .40
        speaker: master_bedroom
    - delay: "00:00:07"
    - service: script.speech_engine
      data:
        who: master_bedroom
        message: > 
          {{ cleaned_briefing.text }}
        msg_summary: "the Morning Wakeup Report"
        type: briefing
  
  haiku_day:
    sequence:
    - service: script.speech_engine
      data:
        who: main
        message: >
          I know a Haiku. This one is called,
              {{ [
              'Good Morning From the Cat. <break time="1s"/>In the morning light, You sleep despite my meow, I stand on your face.',
              'Tee Rex Hug. <break time="1s"/> The Tee Rex likes you, But he cant give you a hug, His arms are too short.',
              'It Fits. <break time="1s"/> It Fits perfectly, because every box is the, Right size for a cat.',
              'Minecraft Creepers. <break time="1s"/> Creepers are so cruel, I hear a hiss from behind, Bam! There goes my stuff.'
            ]|random }}

  find_skylars_phone:
    sequence:
    - service: script.speech_engine
      data:
        message: >
          {{ cerebro.skylar_phone }}

  # dinner_is_ready:
  #   alias: Dinner Annonoucement
  #   sequence:
  #   - service: script.dinner_theater
  #   - service: script.dinner_main
  #   - service: script.dinner_skylar
  #   - service: script.dinner_master  
  #   mode: single 
  # dinner_main:
  #   alias: Dinner Annonoucement Croft
  #   sequence:
  #   - service: script.local_audio
  #     data_template:
  #       speaker: media_player.croft_speaker
  #       media: /media/sounds/ES_Gong.mp3
  #       volume: .5
  #   - delay: 00:00:07
  #   - service: tts.amazon_polly_say
  #     data:
  #       entity_id: media_player.croft_speaker
  #       message: > 
  #         <speak>
  #           {{ [
  #               'Time to eat. Please wash up and head to the kitchen.',
  #               'Food is now being served in the kitchen.',
  #               'If you are hungry, the wait is over. Wash Up.',
  #               'It is time to wash up and head to the kitchen.'
  #             ]|random }}
  #         </speak>
  #   mode: single
  # dinner_theater:
  #   alias: Dinner Annonoucement Theater
  #   sequence:
  #   - condition: state
  #     entity_id: media_player.theater_tv
  #     state: 'on' 
  #   - service: script.local_audio
  #     data_template:
  #       speaker: media_player.theater_speaker
  #       media: /media/sounds/ES_Gong.mp3
  #       volume: .5
  #   - delay: 00:00:07
  #   - service: tts.amazon_polly_say
  #     data:
  #       entity_id: media_player.theater_speaker
  #       message: > 
  #         <speak>
  #           {{ [
  #               'Time to eat. Please wash up and head to the kitchen.',
  #               'Food is now being served in the kitchen.',
  #               'If you are hungry, the wait is over. Wash Up.',
  #               'It is time to wash up and head to the kitchen.'
  #             ]|random }}
  #         </speak>
  #   mode: single 
  # dinner_skylar:
  #   alias: Dinner Annonoucement Skylar
  #   sequence:
  #   - condition: or 
  #     conditions: 
  #     - condition: state
  #       entity_id: binary_sensor.skylars_bedroom_motion
  #       state: 'on' 
  #     - condition: state 
  #       entity_id: binary_sensor.skylar_bedroom_motion_occupancy
  #       state: 'on' 
  #   - service: script.local_audio
  #     data_template:
  #       speaker: media_player.skylars_bedroom_speaker
  #       media: /media/sounds/ES_Gong.mp3
  #       volume: .5
  #   - delay: 00:00:07
  #   - service: tts.amazon_polly_say
  #     data:
  #       entity_id: media_player.skylars_bedroom_speaker
  #       message: > 
  #         <speak>
  #           {{ [
  #               'Time to eat. Please wash up and head to the kitchen.',
  #               'Food is now being served in the kitchen.',
  #               'If you are hungry, the wait is over. Wash Up.',
  #               'It is time to wash up and head to the kitchen.'
  #             ]|random }}
  #         </speak>
  #   mode: single
  # dinner_master:
  #   alias: Dinner Annonoucement Master
  #   sequence:
  #   - condition: or 
  #     conditions: 
  #     - condition: state
  #       entity_id: binary_sensor.master_bedroom_motion
  #       state: 'on' 
  #     - condition: state 
  #       entity_id: binary_sensor.master_bedroom_motion_occupancy
  #       state: 'on'
  #   - service: script.local_audio
  #     data_template:
  #       speaker: media_player.master_bedroom_speaker
  #       media: /media/sounds/ES_Gong.mp3
  #       volume: .5
  #   - delay: 00:00:07
  #   - service: tts.amazon_polly_say
  #     data:
  #       entity_id: media_player.master_bedroom_speaker
  #       message: > 
  #         <speak>
  #           {{ [
  #               'Time to eat. Please wash up and head to the kitchen.',
  #               'Food is now being served in the kitchen.',
  #               'If you are hungry, the wait is over. Wash Up.',
  #               'It is time to wash up and head to the kitchen.'
  #             ]|random }}
  #         </speak>
  #   mode: single             